<launch>
  <!-- rosparam load /ros1_ws/bridge.yaml 
  roslaunch ur_description  robot_description.launch  
  roslaunch course_web_dev_ros  web2.launch  
  roslaunch course_web_dev_ros tf2_web.launch 
  rosrun rqt_image_view rqt_image_view /wrist_rgbd_depth_sensor/image_aruco_frame   -->

  <!-- rosparam load /ros1_ws/bridge.yaml -->
  <rosparam command="load" file="$(find launch_cp25_ros1)/config/bridge.yaml" />


  <!-- roslaunch ur_description  robot_description.launch   -->
  <arg name="is_sim_robot" default="true" />
  <arg default="$(find ur_description)/urdf/ur.urdf.xacro" name="model"/>
	<param command="$(find xacro)/xacro $(arg model) is_sim_robot:=$(arg is_sim_robot)" name="robot_description"/>

  <!-- roslaunch course_web_dev_ros  web2.launch  -->
  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
      <arg name="port" value="9090" />
      <!-- arg name="websocket_external_port" value="$(env SLOT_ROSBRIDGE_PORT)" /-->
  </include>
  <node name="web_video_server" pkg="web_video_server" type="web_video_server">
      <param name="port" value="11315" />
  </node>

  <!-- roslaunch course_web_dev_ros tf2_web.launch -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <remap from="/tf" to="/wrong_tf_do_not_use"/>   
    </node>
    <!--node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    </node-->
    <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher">
    </node>

  <!-- rosrun rqt_image_view rqt_image_view /wrist_rgbd_depth_sensor/image_aruco_frame   -->
  <node name="rqt_image_view" pkg="rqt_image_view"  type="rqt_image_view" args="/wrist_rgbd_depth_sensor/image_aruco_frame">
  </node>

</launch>